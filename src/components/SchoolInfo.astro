---
import { sanityClient } from "sanity:client";

const query = `*[_type == "schoolInfo"][0]{
  image {
    asset->{
      _id,
      url
    }
  },
  quote,
  author
}`;

const getDocumentsQuery = `*[_type == "schoolDocument"] | order(order asc) {
  title,
  documentType,
  "fileUrl": file.asset->url,
  files[] {
    fileName,
    "fileUrl": file.asset->url,
    title
  },
  content
}`;

const newsQuery = `*[_type == "news"] | order(date desc) [0...6] {
  _id,
  title,
  date,
  "imageUrl": image.asset->url,
  summary
}`;

const coatsOfArmsQuery = `*[_type == "coatsOfArms"] {
  _id,
  title,
  link,
  "imageUrl": image.asset->url,
}`;

const quoteQuery = `*[_type == "quote"][0]{
  "imageUrl": image.asset->url,
  title,
}`;
const documents = await sanityClient.fetch(getDocumentsQuery);
const schoolInfo = await sanityClient.fetch(query);
const newsItems = await sanityClient.fetch(newsQuery);
const coatsOfArms = await sanityClient.fetch(coatsOfArmsQuery);
const quote = await sanityClient.fetch(quoteQuery);
---

<div class="flex flex-col md:flex-row items-stretch gap-8 p-6 font-[Geologica]">
  <!-- Левый блок -->
  <div class="w-full md:w-1/3 p-6 rounded-lg shadow-lg relative">
    <div class="grid grid-cols-1 md:grid-cols-1 lg:grid-cols-1 gap-8 p-7">
      {
        newsItems.map((news) => (
          <div class="bg-white shadow-lg rounded-lg overflow-hidden">
            <a href={`/news/${news._id}`}>
              {news.imageUrl && (
                <img
                  src={news.imageUrl}
                  alt={news.title}
                  class="w-full h-48 object-cover"
                />
              )}
              <div class="p-4">
                <h2
                  class="text-xl font-semibold text-[#000C5F]"
                  style="font-family: 'Days One', sans-serif;"
                >
                  {news.title}
                </h2>
                <p class="text-sm text-gray-500 mb-2">
                  {new Date(news.date).toLocaleDateString()}
                </p>
                <p class="text-lg text-gray-700 mb-4">{news.summary}</p>
              </div>
            </a>
          </div>
        ))
      }
    </div>
  </div>

  <!-- Правый блок -->
  <div
    class="w-full h-4/5 md:w-2/3 relative rounded-lg overflow-hidden shadow-lg"
  >
    <div class="w-full shadow-lg rounded-lg m-5">
      <img
        src={quote.imageUrl}
        alt="Фотография"
        class="max-w-[300px] p-5 m-5"
      />
      <p class="p-5">
        {quote.title}
      </p>
    </div>
    {
      coatsOfArms.map((item) => {
        return (
          <div class="w-full shadow-lg rounded-lg flex flex-row items-center gap-5 p-5 m-5">
            <a href={item.link} class="w-[50px]">
              <img src={item.imageUrl} alt="Логотип" />
            </a>
            {item.title}
          </div>
        );
      })
    }
    <img
      src={schoolInfo.image.asset.url}
      alt="Фотография"
      class="object-cover w-full h-full"
    />
    <div
      class="absolute bottom-4 right-4 text-white text-xl md:text-3xl font-extrabold bg-black bg-opacity-50 p-4 rounded-lg"
    >
      <p>{schoolInfo.quote}</p>
      <p class="text-sm md:text-lg font-normal mt-2">
        {schoolInfo.author}
      </p>
    </div>
  </div>
</div>

<script>
  const toggleButton = document.getElementById("toggleButton");
  const documentList = document.getElementById("documentList");
  const arrowIcon = document.getElementById("arrowIcon");

  toggleButton.addEventListener("click", () => {
    const isOpen = documentList.style.opacity === "1";
    documentList.style.opacity = isOpen ? "0" : "1";
    arrowIcon.style.transform = isOpen ? "rotate(90deg)" : "rotate(180deg)";
  });
</script>
